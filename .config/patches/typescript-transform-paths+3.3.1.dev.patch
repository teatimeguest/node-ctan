diff --git a/node_modules/typescript-transform-paths/dist/utils/resolve-module-name.js b/node_modules/typescript-transform-paths/dist/utils/resolve-module-name.js
index ec13e5d..6b308c6 100644
--- a/node_modules/typescript-transform-paths/dist/utils/resolve-module-name.js
+++ b/node_modules/typescript-transform-paths/dist/utils/resolve-module-name.js
@@ -121,13 +121,19 @@ function resolveModuleName(context, moduleName) {
         };
     }
     const resolvedSourceFile = getResolvedSourceFile(context, resolvedModule.resolvedFileName);
-    const { indexType, resolvedBaseNameNoExtension, resolvedFileName, implicitPackageIndex, extName, resolvedDir } = getPathDetail(moduleName, resolvedModule);
+    const { indexType, resolvedBaseNameNoExtension, resolvedFileName, resolvedExtName, implicitPackageIndex, extName, resolvedDir } = getPathDetail(moduleName, resolvedModule);
     /* Determine output filename */
     let outputBaseName = resolvedBaseNameNoExtension !== null && resolvedBaseNameNoExtension !== void 0 ? resolvedBaseNameNoExtension : "";
     if (indexType === IndexType.Implicit)
         outputBaseName = outputBaseName.replace(/(\/index$)|(^index$)/, "");
-    if (outputBaseName && extName)
-        outputBaseName = `${outputBaseName}${extName}`;
+    let outputExtName = extName;
+    if (tsInstance.getEmitModuleKind(compilerOptions) >= tsInstance.ModuleKind.ES2015 &&
+        resolvedExtName !== undefined &&
+        tsInstance.extensionIsTS(resolvedExtName)) {
+        outputExtName = tsInstance.getOutputExtension(resolvedFileName, compilerOptions);
+    }
+    if (outputBaseName && outputExtName)
+        outputBaseName = `${outputBaseName}${outputExtName}`;
     /* Determine output dir */
     let srcFileOutputDir = ts_helpers_1.getOutputDirForSourceFile(context, sourceFile);
     let moduleFileOutputDir = implicitPackageIndex ? resolvedDir : ts_helpers_1.getOutputDirForSourceFile(context, resolvedSourceFile);
